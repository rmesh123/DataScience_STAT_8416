summary(cvNames)
cPaths <- "//categoricalvariable/levels"
lvLength <- unlist(xpathApply(varInfo, cPaths, xmlSize))
cPaths <- "//categoricalvariable/levels"
lvLength <- unlist(xpathApply(varInfo, cPaths, xmlSize))
cPaths <- "//categoricalvariable/levels"
lvLength <- unlist(xpathApply(varInfo, cPaths, xmlSize))
ggplot(hourDat, aes(x=hourDay,y=n, color=weekDay))+
geom_line(size=.5) +
facet_wrap(~ bicycleRents$monthDay)+
xlab("Hour of the DAY")+
ylab("Number of Bike Rents")
library(knitr)
opts_chunk$set(fig.align='center', dpi=100, message=FALSE, warning=FALSE, cache=TRUE)
output <- opts_knit$get("rmarkdown.pandoc.to")
if(!is.null(output)) {
if (output=="html") opts_chunk$set(out.width = '400px') else
opts_chunk$set(out.width='.6\\linewidth')
}
library(XML)
myUrl <- 'http://www.ggobi.org/book/data/olive.xml'
olive <- xmlParse(myUrl)
library(XML)
myUrl <- 'http://www.ggobi.org/book/data/olive.xml'
olive <- xmlParse(myUrl)
library(XML)
myUrl <- 'http://www.ggobi.org/book/data/olive.xml'
olive <- xmlParse(myUrl)
install.packages("XML")
library(knitr)
opts_chunk$set(fig.align='center', dpi=100, message=FALSE, warning=FALSE, cache=TRUE)
output <- opts_knit$get("rmarkdown.pandoc.to")
if(!is.null(output)) {
if (output=="html") opts_chunk$set(out.width = '400px') else
opts_chunk$set(out.width='.6\\linewidth')
}
library(XML)
myUrl <- 'http://www.ggobi.org/book/data/olive.xml'
olive <- xmlParse(myUrl)
url <- 'http://www.ggobi.org/book/data/olive.xml'
olive <- xmlTreeParse(url)
top <- xmlRoot(olive)
xmlName(top)
xmlSize(top)
xmlSize(top)
xmlSApply(top[[1]][["description"]], xmlValue)
library(xml2)
x_1d <- read_xml(url)
olive_1d <- xmlParse(url)
xml_path(xml_find_all(x_1d, ".//realvariable"))
rvPath_1d <- "//ggobidata/data/variables/realvariable"
rvList_1d <- sapply("name", function(x) xpathApply(olive_1d, rvPath_1d, xmlGetAttr, x))
rvNames_1d <- as.vector(unlist(rvList_1d))
rvNames_1d
xmlSize(rvList_1d)
xml_path(xml_find_all(x_1d, ".//categoricalvariable"))
cvPath_1d <- "//ggobidata/data/variables/categoricalvariable"
cvList_1d <- sapply("name", function(x) xpathApply(olive_1d, cvPath_1d, xmlGetAttr, x))
cvNames_1d <- as.vector(unlist(cvList_1d))
cvNames_1d
xmlSize(cvList_1d)
r_1d <- xmlRoot(olive_1d)
varInfo_1d <- r_1d[[1]][[2]]
cPath_1d <- "//categoricalvariable[@name='area']/levels/level"
cLevelsList_1d <- xpathApply(varInfo_1d, cPath_1d, xmlValue)
xmlSize(cLevelsList_1d)
cPath5_1d <- "//categoricalvariable[@name='area']/levels/level[@value='5']"
unlist(xpathApply(varInfo_1d, cPath5_1d, xmlValue))
olive_1e <- xmlParse(url)
xml_path(xml_find_one(x_1d, ".//record"))
datPath_1e <- "//ggobidata/data/records/record"
datValue_1e <- xpathApply(olive_1e, datPath_1e, xmlValue)
datValue_1e <- strsplit(gsub('\\n','',datValue_1e), split="\\s+")
oliveDat <- do.call(rbind.data.frame, datValue_1e)
names(oliveDat) <- c(cvNames_1d,rvNames_1d)
head(oliveDat)
library(ggplot2)
ggplot(oliveDat, aes(x=region, y=palmitic))+
geom_point()+
xlab("Region")+
ylab("palmitic")
ggplot(hourDat, aes(x=hourDay,y=n, color=weekDay))+
geom_line(size=.5) +
facet_wrap(~ bicycleRents$monthDay)+
xlab("Hour of the DAY")+
ylab("Number of Bike Rents")
myDatePacificTZ <- as.POSIXct(myDate, tz="America/Los_Angeles")
myDatePacificTZ
library(lubridate)
weekdays(ymd_hms(myDate))
months(ymd_hms(myDate))
weekdays(ymd_hms(myDate) + years(100))
months(ymd_hms(myDate) + years(100))
library(knitr)
opts_chunk$set(fig.align='center', dpi=100, message=FALSE, warning=FALSE, cache=TRUE)
output <- opts_knit$get("rmarkdown.pandoc.to")
if(!is.null(output)) {
if (output=="html") opts_chunk$set(out.width = '400px') else
opts_chunk$set(out.width='.6\\linewidth')
}
ymd_hms(myDate) + months(2)
ymd_hms(myDate) + months(2)
myDate_2g <- "2020-11-11 11:59:00"
difftime(ymd_hms(myDate_2g), now(), units="secs")
difftime(ymd_hms(myDate_2g), now(), units="hours")
now <- now()
leap_year(now)
Date1_2020 <- as.Date("2020-01-01")
Date2_2020 <- as.Date("2020-12-31")
Date1_2021 <- as.Date("2021-01-01")
Date2_2021 <- as.Date("2021-12-31")
sum(weekdays(seq(Date1_2020, Date2_2020, "days")) %in% c("Saturday", "Sunday"))
sum(weekdays(seq(Date1_2021, Date2_2021, "days")) %in% c("Saturday", "Sunday"))
months(Date1_2020 + days(304))
weekdays(Date1_2020 + days(304))
seq(Date1_2020, length=15, by = '15 day')
format(as.Date("2020-10-20"),format="%m-%d-%Y")
weekdays(as.Date("2020-10-20"))
library(mdsr)
library(Lahman)
library(lubridate)
library(dplyr)
library(sqldf)
library(data.table)
library(mdsr)
library(Lahman)
library(lubridate)
library(dplyr)
library(sqldf)
library(data.table)
library(mdsr)
library(Lahman)
library(lubridate)
library(dplyr)
library(sqldf)
library(data.table)
library(mdsr)
library(Lahman)
library(lubridate)
library(dplyr)
library(sqldf)
library(data.table)
library(mdsr)
library(Lahman)
library(lubridate)
library(dplyr)
library(sqldf)
library(data.table)
library(mdsr)
pres_dat <- presidential
pres_dat[[1]][10] <- "Bush2"
leapyear_pres <- pres_dat
leapyear_pres <- leapyear_pres %>%
group_by(name) %>%
mutate(leapyear_count = sum(leap_year(year(start):year(end)))) %>%
select(name, leapyear_count)
data.table(leapyear_pres)
library(Lahman)
library(lubridate)
team_dat <- Teams
Teams <- filter(Teams, yearID >= 1953, yearID <= 2016)
Teams
pres_condition <- pres_dat
pres_condition$start <- ifelse(month(pres_condition$start) == 1,
year(pres_condition$start),
year(pres_condition$start + years(1)))
pres_condition$end <- ifelse(month(pres_condition$end) == 1,
year(pres_condition$end - years(1)),
year(pres_condition$end))
pres_condition <- pres_dat
pres_condition$start <- ifelse(month(pres_condition$start) == 1,
year(pres_condition$start),
year(pres_condition$start + years(1)))
pres_condition$end <- ifelse(month(pres_condition$end) == 1,
year(pres_condition$end - years(1)),
year(pres_condition$end))
pres_condition <- pres_dat
pres_condition$start <- ifelse(month(pres_condition$start) == 1,
year(pres_condition$start),
year(pres_condition$start + years(1)))
pres_condition$end <- ifelse(month(pres_condition$end) == 1,
year(pres_condition$end - years(1)),
year(pres_condition$end))
pres_condition <- pres_dat
pres_condition$start <- ifelse(month(pres_condition$start) == 1,
year(pres_condition$start),
year(pres_condition$start + years(1)))
pres_condition$end <- ifelse(month(pres_condition$end) == 1,
year(pres_condition$end - years(1)),
year(pres_condition$end))
presidential$start_month <- month(presidential$start)
presidential$end_month <- month(presidential$end)
presidential$StartYear <- ifelse(presidential$start_month != 1, presidential$start_year + 1, presidential$start_year)
presidential$EndYear <- ifelse(presidential$end_month == 1, presidential$end_year - 1, presidential$end_year)
pres <- presidential %>%
select(name, StartYear, EndYear)
pres
pres_condition <- pres_dat
pres_condition$start <- ifelse(month(pres_condition$start) == 1,
year(pres_condition$start),
year(pres_condition$start + years(1)))
pres_condition$end <- ifelse(month(pres_condition$end) == 1,
year(pres_condition$end - years(1)),
year(pres_condition$end))
pres_condition <- pres_dat
pres_condition$start <- ifelse(month(pres_condition$start) == 1,
year(pres_condition$start),
year(pres_condition$start + years(1)))
pres_condition$end <- ifelse(month(pres_condition$end) == 1,
year(pres_condition$end - years(1)),
year(pres_condition$end))
pres_condition <- pres_dat
pres_condition$start <- ifelse(month(pres_condition$start) == 1,
year(pres_condition$start),
year(pres_condition$start + years(1)))
pres_condition$end <- ifelse(month(pres_condition$end) == 1,
year(pres_condition$end - years(1)),
year(pres_condition$end))
pres_condition <- pres_dat
pres_condition$start <- ifelse(month(pres_condition$start) == 1,
year(pres_condition$start),
year(pres_condition$start + years(1)))
pres_condition$end <- ifelse(month(pres_condition$end) == 1,
year(pres_condition$end - years(1)),
year(pres_condition$end))
team_home <- team_dat %>%
select(yearID, H) %>%
group_by(yearID) %>%
summarise_all("sum")
pres_cond <- pres_condition %>%
select(name,start,end) %>%
group_by(name, start, end)
pres_cond <- pres_cond %>%
mutate(count = sum(team_home$H[which(team_home$yearID >= start & team_home$yearID <= end)])) %>%
arrange(desc(count))
unlist(pres_cond[1,])
bicycle_rents <- read.csv("bicycle-rents.csv")
head(bicycle_rents)
bicycle_rents <- read.csv("bicycle-rents.csv")
head(bicycle_rents)
library(ggplot2)
data_5b <- bicycle_rents
data_5b$rent_date <- format(as.Date(data_5b$rent_date),format="%m-%d-%Y")
data_5b <- data_5b %>%
group_by(rent_date) %>%
tally()
data_5b$rent_date <- as.Date(data_5b$rent_date, "%m-%d-%Y")
ggplot(data_5b, aes(x = rent_date, y = n)) +
geom_point()
myDat <- bicycle_rents
myDat <- myDat %>%
mutate(month = lubridate::month(myDat$rent_date, label = TRUE, abbr = FALSE)) %>%
mutate(weekDay = lubridate::wday(myDat$rent_date, label = TRUE, abbr = FALSE)) %>%
mutate(hourDay = lubridate::hour(myDat$rent_date))
head(myDat)
myDat <- bicycle_rents
myDat <- myDat %>%
mutate(month = lubridate::month(myDat$rent_date, label = TRUE, abbr = FALSE)) %>%
mutate(weekDay = lubridate::wday(myDat$rent_date, label = TRUE, abbr = FALSE)) %>%
mutate(hourDay = lubridate::hour(myDat$rent_date))
head(myDat)
myDat_5c_i <- myDat
myDat_5c_i <- myDat_5c_i %>%
group_by(weekDay) %>%
tally() %>%
arrange(desc(n))
myDat_5c_i[1,]
myDat_5c_ii <- myDat
myDat_5c_ii <- myDat_5c_ii %>%
group_by(hourDay) %>%
tally() %>%
arrange(desc(n))
myDat_5c_ii[1,]
myDat_5c_iii <- myDat
myDat_5c_iii <- filter(myDat_5c_iii, weekDay == lubridate::wday(1, label = TRUE, abbr = FALSE))
myDat_5c_iii <- myDat_5c_iii %>%
group_by(hourDay, month) %>%
tally() %>%
arrange(desc(n))
myDat_5c_iii[1,1:3]
myDat_5c_iv <- myDat
myDat_5c_iv <- myDat_5c_iv %>%
group_by(hourDay, weekDay, month) %>%
tally() %>%
arrange(n)
myDat_5c_iv[1:2,1:4]
ggplot(myDat_5c_i, aes(x = weekDay, y = n)) +
geom_point()
monthDat <- myDat
monthDat <- monthDat %>%
group_by(year(rent_date),month) %>%
tally() %>%
arrange(desc(n))
head(monthDat)
monthDat$`year(rent_date)` <- as.character(monthDat$`year(rent_date)`)
colnames(monthDat)[1] <- "year"
ggplot(monthDat, aes(x = month, y = n, color = year)) +
geom_point()
hourDat <- myDat
hourDat <- hourDat %>%
group_by(weekDay, hourDay) %>%
tally() %>%
arrange(desc(n))
head(hourDat)
hourDat_5g <- myDat
hourDat_5g <- filter(hourDat_5g, year(hourDat_5g$rent_date) == year("2013-01-01"))
hourDat_5g <- hourDat_5g %>%
group_by(weekDay, hourDay, month) %>%
tally() %>%
arrange(desc(n))
ggplot() +
geom_line(aes(x = hourDay, y = n, color = weekDay), hourDat_5g) +
facet_wrap(~month)
hourDat_5h <- myDat
hourDat_5h <- filter(hourDat_5h, year(hourDat_5h$rent_date) == year("2013-01-01"))
hourDat_5h <- hourDat_5h %>%
group_by(month) %>%
tally() %>%
arrange(desc(n))
head(hourDat_5h)
walmart_sales <- read.csv("walmart_sales.csv")
walmart_fuel_prices <- read.csv("walmart_fuel_prices.csv")
walmart_sales$Date <- as.Date(walmart_sales$Date)
walmart_fuel_prices$Date <- as.Date(walmart_fuel_prices$Date)
walmart_sales <- walmart_sales %>%
mutate(Month = lubridate::month(walmart_sales$Date, label = TRUE, abbr = FALSE)) %>%
mutate(Day = lubridate::wday(walmart_sales$Date, label = TRUE, abbr = FALSE)) %>%
mutate(Year = lubridate::year(walmart_sales$Date))
walmart_fuel_prices <- walmart_fuel_prices %>%
mutate(Month = lubridate::month(walmart_fuel_prices$Date, label = TRUE, abbr = FALSE)) %>%
mutate(Day = lubridate::wday(walmart_fuel_prices$Date, label = TRUE, abbr = FALSE)) %>%
mutate(Year = lubridate::year(walmart_fuel_prices$Date))
colnames(walmart_sales)
colnames(walmart_fuel_prices)
walmart_sales_6b <- walmart_sales
walmart_sales_6b <- walmart_sales_6b %>%
select(Store, Dept, Year, Month, Weekly_Sales) %>%
group_by(Month, Year, Store, Dept) %>%
summarise_all("sum") %>%
arrange(desc(Weekly_Sales, Year))
walmart_sales_6b[1,]
walmart_sales_6c <- walmart_sales
walmart_sales_6c <- walmart_sales_6c %>%
select(Store, Dept, Month, Date, Weekly_Sales) %>%
group_by(Month, Store, Dept, Date) %>%
summarise_all("mean") %>%
arrange(desc(Weekly_Sales))
walmart_sales_6c[1,-1])
walmart_sales_6c <- walmart_sales
walmart_sales_6c <- walmart_sales_6c %>%
select(Store, Dept, Month, Date, Weekly_Sales) %>%
group_by(Month, Store, Dept, Date) %>%
summarise_all("mean") %>%
arrange(desc(Weekly_Sales))
walmart_sales_6c[1,-1]
```{r}
walmart_sales_6d <- walmart_sales
walmart_sales_6d_11 <- filter(walmart_sales_6d,
Year == lubridate::year("2011-01-01"))
walmart_sales_6d_12 <- filter(walmart_sales_6d,
Year == lubridate::year("2012-01-01"))
walmart_sales_6d_11 <- walmart_sales_6d_11 %>%
select(Store, Month, Weekly_Sales) %>%
group_by(Month, Store) %>%
summarise_all("sum") %>%
arrange(desc(Weekly_Sales))
walmart_sales_6d_12 <- walmart_sales_6d_12 %>%
select(Store, Month, Weekly_Sales) %>%
group_by(Month, Store) %>%
summarise_all("sum") %>%
arrange(desc(Weekly_Sales))
walmart_sales_6d_11[1,]
walmart_sales_6d_12[1,]
walmart_sales_6e <- walmart_sales
walmart_sales_6e_11 <- filter(walmart_sales_6e,
Year == lubridate::year("2011-01-01")
& IsHoliday == TRUE)
walmart_sales_6e_11 <- walmart_sales_6e_11 %>%
select(Month, Weekly_Sales) %>%
group_by(Month) %>%
summarise_all("sum") %>%
arrange(Weekly_Sales)
walmart_sales_6e_12 <- filter(walmart_sales_6e,
Year == lubridate::year("2012-01-01")
& IsHoliday == TRUE)
walmart_sales_6e_12 <- walmart_sales_6e_12 %>%
select(Month, Weekly_Sales) %>%
group_by(Month) %>%
summarise_all("sum") %>%
arrange(Weekly_Sales)
walmart_sales_6e_11[1,]
walmart_sales_6e_12[1,]
walmart_sales_6f <- walmart_sales
walmart_sales_6f_12 <- filter(walmart_sales_6f, Year == lubridate::year("2012-01-01"))
walmart_sales_6f_12 <- walmart_sales_6f_12 %>%
select(Store, Weekly_Sales) %>%
group_by(Store) %>%
summarise_all("sum")
walmart_sales_6f_12$Store <- as.character(walmart_sales_6f_12$Store)
colnames(walmart_sales_6f_12)[1] = "Store"
walmart_sales_6f_12 <- walmart_sales_6f_12 %>%
mutate(Store = reorder(Store, Weekly_Sales)) %>%
mutate(Weekly_Sales_in_thousand_per_unit = walmart_sales_6f_12$Weekly_Sales / 1000)
ggplot(walmart_sales_6f_12, aes(x = Store, y = Weekly_Sales_in_thousand_per_unit)) +
geom_bar(stat = "identity") +
coord_flip()
walmart_fuel_prices_6g <- walmart_fuel_prices
walmart_fuel_prices_6g <- filter(walmart_fuel_prices_6g , Year == lubridate::year("2011-01-01"))
ggplot(data = walmart_fuel_prices_6g, aes(x = Temperature, y = Fuel_Price)) +
geom_point(size = 3) +
geom_smooth(method = "lm", se = F)
walmart_fuel_prices_6h <- walmart_fuel_prices
walmart_fuel_prices_6h <- filter(walmart_fuel_prices_6h , Year == lubridate::year("2010-01-01"))
walmart_fuel_prices_6h <- walmart_fuel_prices_6h %>%
select(Store, Fuel_Price, Month, Temperature) %>%
group_by(Store, Month, Temperature) %>%
summarise_all("min") %>%
arrange(Fuel_Price)
walmart_fuel_prices_6h[1,]
walmart_fuel_prices_6h_h <- walmart_fuel_prices
walmart_fuel_prices_6h_h <- filter(walmart_fuel_prices_6h_h , Year == lubridate::year("2010-01-01")
& Month == lubridate::month("2010-02-02", label = TRUE, abbr = FALSE)
& Store == 36)
walmart_fuel_prices_6h_h <- walmart_fuel_prices_6h_h %>%
select(Store, Fuel_Price, Month, Temperature) %>%
arrange(desc(Fuel_Price))
walmart_fuel_prices_6h_h[1,]
walmart_fuel_prices_6h_h[1,2] - walmart_fuel_prices_6h[1,4]
walmart_fuel_prices_6i <- walmart_fuel_prices
walmart_fuel_prices_6i <- filter(walmart_fuel_prices_6i , Year == year("2012-01-01")
& IsHoliday == TRUE)
walmart_fuel_prices_6i <- walmart_fuel_prices_6i %>%
select(Fuel_Price, Month) %>%
group_by(Month) %>%
summarise_all("min") %>%
arrange(Fuel_Price)
walmart_fuel_prices_6i[1,]
walmart_fuel_prices_6i[4,]
walmart_fuel_prices_6i <- walmart_fuel_prices
walmart_fuel_prices_6i <- filter(walmart_fuel_prices_6i , Year == year("2012-01-01")
& IsHoliday == TRUE)
walmart_fuel_prices_6i <- walmart_fuel_prices_6i %>%
select(Fuel_Price, Month) %>%
group_by(Month) %>%
summarise_all("min") %>%
arrange(Fuel_Price)
walmart_fuel_prices_6i[1,]
walmart_fuel_prices_6i[4,]
library(data.table)
US_covid_confirmed <-
fread(
'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',
stringsAsFactors = FALSE)
nebraska_covid_confirmed <- US_covid_confirmed %>%
filter(Province_State == "Nebraska")
nebraska_long <- melt(nebraska_covid_confirmed, id=1:11) %>%
select(Province_State, Admin2, "variable", "value")
nebraska_daily_cummulative <- nebraska_long %>%
group_by(variable, Province_State) %>%
select(Province_State, Admin2, "variable", "value") %>%
summarise(total_cases = sum(value))
result_7a <- nebraska_daily_cummulative %>%
filter(variable == "10/30/20")
result_7a
nebraska_cases_daily <- nebraska_daily_cummulative %>%
group_by(Province_State) %>%
mutate(cases_daily = total_cases - lag(total_cases))
plot(nebraska_cases_daily$variable, nebraska_cases_daily$cases_daily)
result_7b <- nebraska_cases_daily %>%
arrange(desc(cases_daily))
result_7b[1,]
nebraska_county_daily_cummulative <- nebraska_long %>%
group_by(variable, Province_State, Admin2) %>%
select(Province_State, Admin2, "variable", "value") %>%
summarise(total_cases = sum(value))
nebraska_county_cases_daily <- nebraska_county_daily_cummulative %>%
group_by(Province_State, Admin2) %>%
mutate(cases_daily = total_cases - lag(total_cases)) %>%
arrange(desc(cases_daily))
nebraska_county_cases_daily[1,-4]
nebraska_county_cases_daily_7d <- nebraska_county_cases_daily %>%
filter(variable == "11/7/20") %>%
arrange(desc(total_cases))
head(nebraska_county_cases_daily_7d, n = 2L)
result_7d <- nebraska_county_cases_daily %>%
filter(Admin2 == "Douglas" | Admin2 == "Lancaster") %>%
arrange(variable)
result_7d <- result_7d[!(is.na(result_7d$cases_daily) | result_7d$cases_daily==""), ]
result_7d_Dou <- filter(result_7d, Admin2 == "Douglas")
result_7d_Lan <- filter(result_7d, Admin2 == "Lancaster")
plot(result_7d_Dou$variable, result_7d_Dou$cases_daily)
plot(result_7d_Lan$variable, result_7d_Lan$cases_daily)
library(leaflet)
library(webshot)
install_phantomjs(version = "2.1.1",
baseURL = "https://github.com/wch/webshot/releases/download/v0.3.1/",
force = FALSE)
US_covid_confirmed_7e <- US_covid_confirmed
covid_long <- melt(US_covid_confirmed_7e, id=1:11) %>%
select(Province_State, Admin2, Lat, Long_, "variable", "value")
daily_cummulative <- covid_long %>%
group_by(Province_State, Admin2, variable, Lat, Long_) %>%
select(Province_State, Admin2, Lat, Long_, "variable", "value") %>%
summarise(total_cases = sum(value))
result_7e <- daily_cummulative %>%
filter(variable == "11/7/20")
leaflet() %>%
addTiles() %>%
setView(lng=-95, lat=41, zoom = 4) %>%
addCircleMarkers(lat = result_7e$Lat, lng = result_7e$Long_,
popup = as.character(result_7e$total_cases),
clusterOptions = markerClusterOptions())
